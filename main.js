const _0x345be2 = _0x2f18; (function (_0x261cd2, _0x351fb9) { const _0x54fc80 = _0x2f18, _0x33a450 = _0x261cd2(); while (!![]) { try { const _0x8449e9 = parseInt(_0x54fc80(0xb4)) / 0x1 * (-parseInt(_0x54fc80(0xac)) / 0x2) + parseInt(_0x54fc80(0x97)) / 0x3 + -parseInt(_0x54fc80(0xb1)) / 0x4 + parseInt(_0x54fc80(0xa0)) / 0x5 + -parseInt(_0x54fc80(0xae)) / 0x6 + -parseInt(_0x54fc80(0xa8)) / 0x7 * (parseInt(_0x54fc80(0xa1)) / 0x8) + -parseInt(_0x54fc80(0xad)) / 0x9 * (-parseInt(_0x54fc80(0x9d)) / 0xa); if (_0x8449e9 === _0x351fb9) break; else _0x33a450['push'](_0x33a450['shift']()); } catch (_0x4cdd9d) { _0x33a450['push'](_0x33a450['shift']()); } } }(_0x2b9f, 0x534a2)); import { waitForTimeout, getNumber, getBalance, rl, askQuestion, runMainInMultipleThreads } from './function/function.js'; import { regist } from './function/main-function.js'; import { logger } from './complement/logger/winston.js'; import { green, white } from './complement/logger/color.js'; import { verifyLicense } from './function/function.js'; function _0x2f18(_0x228ecd, _0x5a41a0) { const _0x2b9f37 = _0x2b9f(); return _0x2f18 = function (_0x2f18a6, _0x14f6b4) { _0x2f18a6 = _0x2f18a6 - 0x96; let _0x8553d3 = _0x2b9f37[_0x2f18a6]; return _0x8553d3; }, _0x2f18(_0x228ecd, _0x5a41a0); } import _0x4647dd from 'fs'; import { generateAsciiText } from './complement/logger/intro.js'; import { countdown } from './function/function.js'; const licenseToken = JSON[_0x345be2(0x9e)](_0x4647dd[_0x345be2(0x96)](_0x345be2(0xa5)))['licensi_bot']; !verifyLicense(licenseToken) && process['exit'](0x1); async function reg() { const _0x553ac5 = _0x345be2; let _0x28a52b = '', _0x4dd59f = ''; countdown(0x3), await waitForTimeout(0xfa0), console[_0x553ac5(0x99)](), generateAsciiText('BONDJOL\x20DGP', 'green')[_0x553ac5(0x9b)](_0x2cb899 => console[_0x553ac5(0xa9)](_0x2cb899))[_0x553ac5(0xaf)](_0x1acef2 => console[_0x553ac5(0xb0)](_0x1acef2)), await getBalance(); while (!![]) { console[_0x553ac5(0xa9)](green + _0x553ac5(0xa2) + white + _0x553ac5(0xb3)); const _0x506edf = await askQuestion(_0x553ac5(0x9f)); if (_0x506edf == '1') { _0x28a52b = '12', _0x4dd59f = 'ot'; break; } else { if (_0x506edf == '2') { _0x28a52b = '117', _0x4dd59f = 'jq'; break; } else { if (_0x506edf == '3') { _0x28a52b = '78', _0x4dd59f = 'jq'; break; } else console[_0x553ac5(0xa9)](_0x553ac5(0x98)); } } } return { 'country': _0x28a52b, 'service': _0x4dd59f }; } const { country, service } = await reg(); async function main() { const _0x4695fc = _0x345be2; try { let _0x316bad = await getNumber(country, service); while (_0x316bad === _0x4695fc(0xa4) || _0x316bad === _0x4695fc(0xa6) || _0x316bad === _0x4695fc(0x9a) || _0x316bad === 'BAD_ACTION' || _0x316bad === 'BAD_SERVICE' || _0x316bad === 'BAD_KEY' || _0x316bad === 'ERROR_SQL') { logger[_0x4695fc(0xb0)](_0x4695fc(0xb2) + _0x316bad), await waitForTimeout(0xc8), _0x316bad = await getNumber(country, service); } if (_0x316bad === _0x4695fc(0xa4)) logger[_0x4695fc(0xab)](_0x4695fc(0xaa)); else { if (_0x316bad === _0x4695fc(0xa6)) logger[_0x4695fc(0xb0)]('Terjadi\x20kesalahan\x20pada\x20server'); else { const _0xe50d13 = _0x316bad[_0x4695fc(0xa3)](':'), _0x450697 = _0xe50d13[0x2]; logger[_0x4695fc(0xab)](green + 'Received\x20number\x20:\x20' + _0x450697 + white), await regist(_0x316bad); } } } catch (_0x5048f2) { logger['error']('Error\x20in\x20main\x20function:\x20' + _0x5048f2); } } function _0x2b9f() { const _0x541b6f = ['then', 'How\x20many\x20accounts\x20do\x20you\x20want\x20to\x20create:\x20', '10tPRted', 'parse', '\x0aSelect\x20Country\x20:\x20', '3154290RKJITi', '4000yTtTjw', 'LIST\x20COUNTRY\x20:', 'split', 'NO_NUMBERS', 'data.json', 'SERVER_ERROR', 'Sorry,\x20that\x20is\x20beyond\x20my\x20capabilities', '4739eHXRYU', 'log', 'Nomor\x20habis', 'info', '24JlgDBU', '3697929oyJsRs', '634614DDSwwW', 'catch', 'error', '2200460xStpWF', 'Invalid\x20response:\x20', '\x0a1.\x20USA\x20\x20\x20\x20\x20\x20=>\x206\x20rub\x0a2.\x20Portugal\x20=>\x200.67\x20rub\x0a3.\x20France\x20\x20\x20=>\x200.67\x20rub', '27475jqYGCh', 'readFileSync', '1870497gcWAeJ', 'Your\x20choice\x20is\x20not\x20correct\x20[1\x20-\x203]\x0a', 'clear', 'BAD_KEY']; _0x2b9f = function () { return _0x541b6f; }; return _0x2b9f(); }; const app = async () => { const _0x2a4859 = _0x345be2; try { const _0x3ef374 = parseInt(await askQuestion(_0x2a4859(0x9c))); _0x3ef374 > 0x9 ? logger[_0x2a4859(0xb0)](_0x2a4859(0xa7)) : await runMainInMultipleThreads(_0x3ef374); } catch (_0x1b2aa) { logger[_0x2a4859(0xb0)]('Error\x20in\x20main\x20function:\x20' + _0x1b2aa); } finally { rl['close'](); } }; app(); export { main };